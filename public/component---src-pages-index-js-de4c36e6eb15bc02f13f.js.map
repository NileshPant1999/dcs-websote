{"version":3,"sources":["webpack:///./src/components/Project.js","webpack:///./src/components/Projects.js","webpack:///./src/components/Hero.js","webpack:///./src/constants/services.js","webpack:///./src/components/Services.js","webpack:///./src/components/Jobs.js","webpack:///./src/pages/index.js"],"names":["Project","description","title","github","stack","url","image","index","className","fluid","childImageSharp","map","item","key","id","href","Projects","projects","showLink","Title","project","to","Hero","file","icon","text","Services","services","service","Jobs","data","console","log","jobs","allStrapiJobs","nodes","React","useState","value","setValue","company","position","date","desc","strapiId","onClick","name","query","allStrapiProjects","Layout"],"mappings":"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","file":"component---src-pages-index-js-de4c36e6eb15bc02f13f.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { FaGithubSquare, FaShareSquare } from \"react-icons/fa\"\nconst Project = ({ description, title, github, stack, url, image, index }) => {\n  return (\n    <article className='project'>\n      <Image fluid={image.childImageSharp.fluid} className=\"project-img\" />\n      <div className='project-info'>\n        <span className='project-number'>0{index + 1}</span>\n        <h3>{title}</h3>\n        <p className='project-desc'>\n          {description}\n        </p>\n        <div className=\"project-stack\">\n          {stack.map((item) => {\n            return <span key={item.id}>{item.title}</span>\n          })}\n        </div>\n        <div className='project-links'>\n          <a href={github}>\n            <FaGithubSquare className='project-icon' />\n          </a>\n          <a href={url}>\n            <FaShareSquare className='project-icon' />\n          </a>\n        </div>\n      </div>\n    </article>\n  )\n}\n\nProject.propTypes = {}\n\nexport default Project\n","import React from \"react\"\nimport Title from \"./Title\"\nimport Project from \"./Project\"\nimport { Link } from \"gatsby\"\nconst Projects = ({ projects, title, showLink }) => {\n  return (\n    <section className='section projects'>\n      <Title title={title} />\n      <div className='section-center projects-center'>\n        {projects.map((project, index) => {\n          return <Project key={project.id} index={index} {...project} />\n        })}\n      </div>\n      {\n        showLink && (<Link to='/projects' className='btn center-btn'>\n          projects\n        </Link>\n        )}\n    </section>\n  )\n}\n\nexport default Projects\n","import React from \"react\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport SocialLinks from \"../constants/socialLinks\"\n\nconst query = graphql`\n{\n  file(relativePath: {eq: \"hero.png\"}) {\n    childImageSharp {\n      fluid {\n        ...GatsbyImageSharpFluid\n      }\n    }\n  }\n}\n`\n\nconst Hero = () => {\n  const {\n    file: {\n      childImageSharp: { fluid },\n    },\n  } = useStaticQuery(query)\n  return (\n    <header className='hero'>\n      <div className='section-center hero-center'>\n        <article className=\"hero-info\">\n          <div className=\"underline\"></div>\n          <h1>I'm Nilesh</h1>\n          <h4>I am a freelance Machine learning Engineer with experience in full-stack development</h4>\n          <Link to=\"/contact\" className=\"btn\">\n            contact me\n          </Link>\n          <SocialLinks />\n        </article>\n      </div>\n    </header>\n  )\n}\n\nexport default Hero\n","import React from \"react\"\nimport { FaCode, FaSketch, FaAndroid } from \"react-icons/fa\"\nexport default [\n\n  {\n    id: 1,\n    icon: <FaCode className=\"service-icon\" />,\n    title: \"web development\",\n    text: `I'm baby meditation tofu chillwave, distillery messenger bag thundercats chicharrones kale chips gochujang. Banh mi direct trade marfa salvia.`,\n  },\n  {\n    id: 2,\n    icon: <FaSketch className=\"service-icon\" />,\n    title: \"Data Science\",\n    text: `I'm baby meditation tofu chillwave, distillery messenger bag thundercats chicharrones kale chips gochujang. Banh mi direct trade marfa salvia.`,\n  },\n  {\n    id: 3,\n    icon: <FaAndroid className=\"service-icon\" />,\n    title: \"Backend Development\",\n    text: `I'm baby meditation tofu chillwave, distillery messenger bag thundercats chicharrones kale chips gochujang. Banh mi direct trade marfa salvia.`,\n  },\n]\n","import React from \"react\"\nimport Title from \"./Title\"\nimport services from \"../constants/services\"\nconst Services = () => {\n  return (\n    <section className='section bg-grey'>\n      <Title title='services' />\n      <div className=\"section-center services-center\">\n        {services.map((service) => {\n          const { id, icon, title, text } = service\n\n          return (\n            <article key={id} className='service'>\n              {icon}\n              <h4>{title}</h4>\n              <div className='underline'></div>\n              <p>{text}</p>\n            </article>\n          )\n        })}\n      </div>\n    </section>\n  )\n}\n\nexport default Services\n","import React from \"react\"\nimport Title from \"./Title\"\nimport { FaAngleDoubleRight, FaAlignRight } from \"react-icons/fa\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Link } from \"gatsby\"\n\nconst query = graphql`\n  {\n    allStrapiJobs(sort: {fields: strapiId, order: ASC}) {\n      nodes {\n        company\n        date\n        position\n        desc {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nconst Jobs = () => {\n  const data = useStaticQuery(query)\n  console.log(data)\n  const { allStrapiJobs: { nodes: jobs },\n  } = data\n  const [value, setValue] = React.useState(0)\n  const { company, position, date, desc } = jobs[value]\n  return (\n    <section className='section jobs'>\n      <Title title=\"expierence\" />\n      <div className='jobs-center'>\n        <div className='btn-container'>\n          {jobs.map((item, index) => {\n            return (\n              <button key={item.strapiId}\n                onClick={() => setValue(index)}\n                className={`job-btn ${index == value && \"active-btn\"}`}>{item.company}</button>\n            )\n          })}\n        </div>\n        <article className='job-info'>\n          <h3>{position}</h3>\n          <h4>{company}</h4>\n          <p className='job-date'>{date}</p>\n          {\n            desc.map((item) => {\n              return (\n                <div key={item.id} className='job-desc'>\n                  <FaAlignRight className='job-icon'></FaAlignRight>\n                  <p>{item.name}</p>\n                </div>\n              )\n            })\n          }\n        </article>\n      </div>\n      <Link to=\"/about\" className='btn center-btn'>\n        more info\n      </Link>\n    </section>\n  )\n}\n\nexport default Jobs\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport Hero from \"../components/Hero\"\nimport Services from \"../components/Services\"\nimport Jobs from \"../components/Jobs\"\nimport Projects from \"../components/Projects\"\nimport Blogs from \"../components/Blogs\"\nexport default ({ data }) => {\n  const { allStrapiProjects: { nodes: projects }, } = data\n\n  return <Layout>\n    <Hero />\n    <Services />\n    <Jobs />\n    <Projects projects={projects} title=\"featured projects\" showLink />\n  </Layout>\n}\nexport const query = graphql`\n  {\n      allStrapiProjects(filter: {featured: {eq: true}}) {\n      nodes {\n      github\n        description\n        url\n        id\n        title\n        image {\n      childImageSharp {\n      fluid {\n      ...GatsbyImageSharpFluid\n    }\n          }\n        }\n        stack {\n      id\n          title\n        }\n      }\n    }\n  }\n`\n\n"],"sourceRoot":""}